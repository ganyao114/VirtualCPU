// System
INST0(Nop, Void)
INST0(Yield, Void)
INST1(Svc, Void, Imm)
INST1(Brk, Void, Imm)
INST1(Hlt, Void, Imm)

// Help
INST0(Fallback, Void)

// Imm
INST1(LoadImm, Value, Imm)

// Context
INST1(GetReg, Value, Reg)
INST2(SetReg, Void, Reg, Value)
INST1(GetVReg, Value, VReg)
INST2(SetVReg, Void, VReg, Value)
INST2(SetFlag, Void, Flags, Value)
INST1(MarkFlag, Void, Flags)
INST1(ClearFlags, Void, Flags)
INST1(CheckFlag, Value, Flags)
INST1(CheckCond, Value, Cond)

// Help
INST1(PushRSB, Void, Address)
INST0(PopRSB, Void)

// Calculator
INST2(AddImm, Value, Value, Imm)
INST2(AddValue, Value, Value, Value)
INST2(SubImm, Value, Value, Imm)
INST2(SubValue, Value, Value, Value)
// With Carry
INST2(AdcImm, Value, Value, Imm)
INST2(AdcValue, Value, Value, Value)
INST2(SbbImm, Value, Value, Imm)
INST2(SbbValue, Value, Value, Value)
// Mul & Div
INST2(MulImm, Value, Value, Imm)
INST2(MulValue, Value, Value, Value)
INST2(DivImm, Value, Value, Imm)
INST2(DivValue, Value, Value, Value)
INST2(ZeroExtend, Value, Value, Size)
INST2(SignExtend, Value, Value, Size)
// And & Or
INST2(AndImm, Value, Value, Imm)
INST2(OrImm, Value, Value, Imm)
INST2(AndValue, Value, Value, Value)
INST2(OrValue, Value, Value, Value)
// Get flag from result
INST1(GetCarry, Value, Value)
INST1(GetOverFlow, Value, Value)
INST1(GetSigned, Value, Value)
INST1(GetZero, Value, Value)
// Other flags
INST2(GetFlag, Value, Value, Flags)
// Shift
// LogicalShiftLeft
INST2(Lsl, Value, Value, Imm)
// LogicalShiftRight
INST2(Lsr, Value, Value, Imm)
// ArithmeticShiftRight
INST2(Asr, Value, Value, Imm)
// RotateRight
INST2(Rr, Value, Value, Imm)
// Bit
INST3(BitExtract, Value, Value, Imm, Imm)
INST4(BitInsert, Value, Value, Value, Imm, Imm)
INST3(BitClear, Value, Value, Imm, Imm)
INST2(TestBit, Value, Value, Imm)

// Memory
INST1(ReadMemory, Value, Address)
INST2(WriteMemory, Void, Address, Value)
INST3(CompareAndSwap, Value, Address, Value, Value)

// Vector



